name: Deploy Midterm Django App

on:
  push:
    branches:
      - master
    # paths:
      # - 'Midterm/**'  # Trigger only if files within Midterm are changed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./Midterm
          file: ./Midterm/Dockerfile
          push: true
          tags: diable201/midterm:latest

      # Step 5: Use SSH to Transfer docker-compose.yaml
      - name: Transfer docker-compose.yaml via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 45916
          script_stop: true
          debug: true
          script: |
            set -e

            # Navigate to the project directory
            cd ${{ secrets.REMOTE_PROJECT_PATH }}

            # Transfer docker-compose.yaml content
            echo 'Copying docker-compose.yaml...'
            cat > docker-compose.yaml << 'EOF'
            $(cat ./Midterm/docker-compose.yaml)
            EOF

            echo 'File copied successfully!'

      # Step 6: Deploy using Docker Compose
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 45916
          script_stop: true
          debug: true
          script: |
            set -e

            # Navigate to the project directory
            cd ${{ secrets.REMOTE_PROJECT_PATH }}

            # Stop and remove any running containers
            docker compose down || true

            # Pull the latest image
            docker compose pull

            # Start the containers
            docker compose up -d --remove-orphans

            # Collect static files
            docker compose exec web python todo/manage.py collectstatic --noinput

      # Step 7: Send Telegram Notification on Success
      - name: Send Telegram Notification - Success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ *Deployment Successful*
            The Midterm Django App has been deployed successfully! 🎉

      # Step 8: Send Telegram Notification on Failure
      - name: Send Telegram Notification - Failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ *Deployment Failed*
            The deployment of the Midterm Django App has failed. Please check the GitHub Actions logs for details. 😞
