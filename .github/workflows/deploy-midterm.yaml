name: Deploy Midterm Django App

on:
  push:
    branches:
      - master
    # paths:
      # - 'Midterm/**'  # Trigger only if files within Midterm are changed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build and push Docker image (optional)
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./Midterm
          file: ./Midterm/Dockerfile
          push: true
          tags: diable201/midterm:latest

      # Step 5: Transfer docker-compose.yaml via SCP
      - name: Transfer docker-compose.yaml
        run: |
          scp -P 45916 -o StrictHostKeyChecking=no \
          ./Midterm/docker-compose.yaml \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.REMOTE_PROJECT_PATH }}

      # Step 5: Deploy to server via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 45916
          script_stop: true
          debug: true
          script: |
            set -e  # Exit on any command failure

            cd ${{ secrets.REMOTE_PROJECT_PATH }}

            # Backup existing .env file
            if [ -f .env ]; then
              cp .env .env.backup.$(date +%s)
            fi

            # Create the new .env file
            cat <<EOF > .env
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DEBUG=${{ secrets.DEBUG }}
            EOF

            # Set proper permissions
            chmod 600 .env

            # Pull the latest Docker image (if using Docker Hub)
            docker compose pull

            # Restart the containers
            docker compose up -d --remove-orphans

            docker compose exec web python todo/manage.py collectstatic --noinput
      
      # Step 6: Send Telegram Notification on Success
      - name: Send Telegram Notification - Success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ *Deployment Successful*
            The Midterm Django App has been deployed successfully! üéâ

      # Step 7: Send Telegram Notification on Failure
      - name: Send Telegram Notification - Failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚ùå *Deployment Failed*
            The deployment of the Midterm Django App has failed. Please check the GitHub Actions logs for details. üòû
